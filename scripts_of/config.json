{
    "__comment": "Variable names that can be used:",
    "__comment": "INPUT : The full path of the input filename (fasta file of sequences for and msa method, multiple sequence alignment fasta file for tree method)",
    "__comment": "BASENAME : Just the filename without the directory path (a number of methods use this to name the output file automatically, see MergeAlign command for an example)",
    "__comment": "PATH : Path to the directory containing the input file",
    "__comment": "OUTPUT : The full path of the user specified output filename",
    "__comment": "BASEOUTNAME : Just the filename without the directory path (of the output filename)",
    "__comment": "IDENTIFIER : A name generated by OrthoFinder to uniquely identify the orthogroup (a number of methods use this to name the output file automatically, see RAxML command for an example). Not applicable for program_type search.",
    "__comment": "DATABASE : For the search program_type, for use in the search_cmd. The full path of the database to search against",

    "mafft":{ 
    "program_type": "msa",
    "cmd_line": "mafft --localpair --maxiterate 1000 --anysymbol INPUT > OUTPUT 2> /dev/null",
    "cmd_line_fast": "mafft --anysymbol INPUT > OUTPUT 2> /dev/null",
    "n_seqs_use_fast" : "500"
    },

    "muscle":{ 
    "program_type": "msa",
    "cmd_line": "muscle -in INPUT -out OUTPUT"
    },

    "fasttree":{ 
    "program_type": "tree",
    "cmd_line": "FastTree INPUT > OUTPUT 2> /dev/null"
    },

    "raxml":{ 
    "program_type": "tree",
    "cmd_line": "raxmlHPC-AVX -m PROTGAMMALG -p 12345 -s INPUT -n IDENTIFIER -w PATH > /dev/null",
    "ouput_filename": "PATH/RAxML_bestTree.IDENTIFIER"
    },

    "raxml-ng":{ 
    "program_type": "tree",
    "cmd_line": "raxml-ng --msa INPUT --model LG+G4 --seed 12345 --threads 1",
    "ouput_filename": "INPUT.raxml.bestTree"
    },

    "iqtree":{ 
    "program_type": "tree",
    "cmd_line": "iqtree -s INPUT -pre PATH/IDENTIFIER > /dev/null",
    "ouput_filename": "PATH/IDENTIFIER.treefile"
    },

    "diamond":{ 
    "program_type": "search",
    "db_cmd": "diamond makedb --in INPUT -d OUTPUT",
    "search_cmd": "diamond blastp -d DATABASE -q INPUT -o OUTPUT --more-sensitive -p 1 --quiet -e 0.001 --compress 1"
    },

    "blast_gz":{ 
    "program_type": "search",
    "db_cmd": "makeblastdb -dbtype prot -in INPUT -out OUTPUT",
    "search_cmd": "blastp -outfmt 6 -evalue 0.001 -query INPUT -db DATABASE | gzip > OUTPUT.gz"
    },

    "mmseqs":{ 
    "program_type": "search",
    "db_cmd": "mmseqs createdb INPUT OUTPUT.fa ; mmseqs createindex OUTPUT.fa /tmp",
    "search_cmd": "mmseqs search PATH/mmseqsDBBASENAME DATABASE.fa OUTPUT.db /tmp/tmpBASEOUTNAME  --threads 1 ; mmseqs convertalis --threads 1 PATH/mmseqsDBBASENAME DATABASE.fa OUTPUT.db OUTPUT"
    }
}
